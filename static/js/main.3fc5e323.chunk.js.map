{"version":3,"sources":["Compilador/Instrucciones.js","logo.svg","Compilador/Gramatica.js","serviceWorker.js","scripts/mainScript.js","index.js"],"names":["ErroresLexicos","ErroresSintacticos","AST_Tools","BloquePrincipal","sentencias","AST","Manejo_Errores","addErrorLexico","error","fila","push","Error","Fila","resetErrors","module","exports","Tipo_Operacion","NEGACION","MULTIPLICACION","DIVISION","SUMA","RESTA","MODULO","POTENCIA","CONCATENACION","DECREMENTO","INCREMENTO","MAYOR_QUE","MENOR_QUE","MAYOR_IGUAL","MENOR_IGUAL","DOBLE_IGUAL","NO_IGUAL","AND","OR","NOT","Tipo_Instruccion","DECLARACION","ASIGNACION","ASIG_DECL","DECL_FUNCION","LLAM_FUNCION","SALIDA","BLOQUE_IF","BLOQUE_ELSE","BLOQUE_ELSE_IF","BLOQUE_SWITCH","CASO_SWITCH","CASO_DEFAULT_SWITCH","BLOQUE_WHILE","BLOQUE_DOWHILE","BLOQUE_FOR","BLOQUE_FOR_OF","BLOQUE_FOR_IN","CONTINUE","RETURN","BREAK","Tipo_Valor","NUMERO","DECIMAL","ID","BOOLEANO","CADENA","CARACTER","Gramatica","o","k","v","l","length","$V0","$V1","$V2","parser","trace","yy","symbols_","terminals_","2","5","8","9","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","this","$","console","log","table","3","4","6","7","1","defaultActions","parseError","str","hash","recoverable","parse","input","self","stack","vstack","lstack","recovering","TERROR","EOF","args","slice","call","arguments","lexer","Object","create","sharedState","prototype","hasOwnProperty","setInput","yylloc","yyloc","ranges","options","popStack","n","getPrototypeOf","symbol","preErrorSymbol","state","action","r","p","len","newState","expected","lex","token","yyval","error_rule_depth","locateNearestErrorRecoveryRule","stack_probe","depth","toString","errStr","showPosition","join","text","match","line","loc","Array","first_line","last_line","first_column","last_column","range","apply","concat","require","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","unput","lines","split","substr","oldLines","more","reject","backtrack_lexer","less","pastInput","past","replace","upcomingInput","next","pre","c","test_match","indexed_rule","backup","matches","tempMatch","index","rules","_currentRules","i","flex","begin","condition","popState","pop","conditions","topState","Math","abs","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","Parser","main","process","exit","source","readFileSync","normalize","argv","Boolean","window","location","hostname","CodeTxt","print","event","alert","setLC","editor","element","innerHTML","getCursor","ast","JSON","stringify","e","Editor","className","autoFocus","onChange","data","value","onCursorActivity","document","getElementById","theme","mode","matchBrackets","lineNumbers","id","Viewer","Console","BtnTranslate","props","onClick","BtnRun","BtnReports","MainComponent","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.3fc5e323.chunk.js","sourcesContent":["// Tipos de Operaciones\nconst Tipo_Operacion = {\n    //Aritmetica\n    NEGACION:       'NEGACION',\n    MULTIPLICACION: 'MULTIPLICACION',\n\tDIVISION:       'DIVISION',\n\tSUMA:           'SUMA',\n    RESTA:          'RESTA',\n    MODULO:         'MODULO',\n\tPOTENCIA:       'POTENCIA',\n\tCONCATENACION:\t'CONCATENACION',\n\tDECREMENTO:\t\t'DECREMENTO',\n\tINCREMENTO:\t\t'INCREMENTO',\n    //Relacional\n\tMAYOR_QUE:      'MAYOR_QUE',\n\tMENOR_QUE:      'MENOR_QUE',\n\tMAYOR_IGUAL: \t'MAYOR_IGUAL',\n\tMENOR_IGUAL:    'MENOR_IGUAL',\n\tDOBLE_IGUAL:    'DOBLE_IGUAL',\n    NO_IGUAL:    \t'IGUAL_QUE',\n    //Logica\n\tAND:  \t\t\t'AND',\n\tOR: \t\t\t'OR',\n\tNOT:   \t\t\t'NOT'  \t\n}\n// Tipos de Instrucciones\nconst Tipo_Instruccion = {\n\tDECLARACION:\t\t'INS_DECLARACION',\n\tASIGNACION:\t\t\t'INS_ASIGANCION',\n    ASIG_DECL:      \t'INS_ASIGNACION_DECLARACION',\n\tDECL_FUNCION:   \t'INS_DECLARACION_FUNCION',\n    LLAM_FUNCION:   \t'INS_LLAMADA_FUNCION',\n    SALIDA:         \t'INS_SALIDA_CONSOLA',\n\tBLOQUE_IF:      \t'INS_BLOQUE_IF',\n\tBLOQUE_ELSE:      \t'INS_BLOQUE_ELSE',\n\tBLOQUE_ELSE_IF:     'INS_BLOQUE_ELSE_IF',\n\tBLOQUE_SWITCH:  \t'INS_BLOQUE_SWITCH',\n\tCASO_SWITCH:  \t\t'INS_CASO_SWITCH',\n\tCASO_DEFAULT_SWITCH:'INS_CASO_DEFAULT_SWITCH',\t\n    BLOQUE_WHILE:   \t'INS_BLOQUE_WHILE',\n    BLOQUE_DOWHILE: \t'INS_BLOQUE_DOWHILE',\n    BLOQUE_FOR:     \t'INS_BLOQUE_FOR',\n    BLOQUE_FOR_OF:     \t'INS_BLOQUE_FOR_OF',\n    BLOQUE_FOR_IN:     \t'INS_BLOQUE_FOR_IN',\n    CONTINUE:       \t'INS_CONTINUE',\n    RETURN:         \t'INS_RETURN',\n    BREAK:          \t'INS_BREAK'\n}\n\n// Tipos de Datos\nconst Tipo_Valor = {\n    NUMERO:         'NUMERO',\n    DECIMAL:        'DECIMAL',\n    ID:             'ID',\n    BOOLEANO:       'BOOLEANO',\n    CADENA:         'CADENA',\n    CARACTER:       'CARACTER'\n}\n\nlet ErroresLexicos=[];\nlet ErroresSintacticos=[];\nlet ErroresSemanticos=[];\nlet Traduccion=\"\";\n\nconst AST_Tools = {\n\n    /**\n\t * Crea el bloque global, este contiene todo el codigo fuente\n\t * @param sentencias Conjunto de todas las instrucciones \n\t */\n\tBloquePrincipal: function(sentencias) {\n\t\treturn {\n            AST: sentencias,\n\t\t\tErroresLexicos:ErroresLexicos,\n\t\t\tErroresSintacticos:ErroresSintacticos\n\t\t}\n    },\n}\n\nconst Translate_Tools ={\n\n}\n\n\nconst Manejo_Errores = {\n\n    /**\n\t * Añade un nuevo error Lexico\n     * @param error Texto que dio error \n     * @param fila Numero de fila del error\n\t */\n\taddErrorLexico:function(error,fila){\n\t\tErroresLexicos.push(\n\t\t{\n\t\t\tError:error,\n\t\t\tFila:fila,\n\t\t});\n    },\n\n    /**\n     * Limpia los arreglos de errores\n     */\n    resetErrors:function(){\n\t\tErroresSintacticos=[];\n        ErroresLexicos=[];\n        ErroresSemanticos=[];\n\t}\n\n}\n\nmodule.exports.Tipo_Operacion = Tipo_Operacion;\nmodule.exports.Tipo_Instruccion = Tipo_Instruccion;\nmodule.exports.Tipo_Valor = Tipo_Valor;\nmodule.exports.AST_Tools = AST_Tools;\nmodule.exports.Manejo_Errores = Manejo_Errores;\nmodule.exports.ErroresLexicos = ErroresLexicos;\nmodule.exports.ErroresSintacticos = ErroresSintacticos;","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar Gramatica = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,6],$V1=[1,5],$V2=[2,5,8];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"init\":3,\"inicio\":4,\"EOF\":5,\"instrucciones\":6,\"instruccion\":7,\"ID\":8,\"PUNTOYCOMA\":9,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"EOF\",8:\"ID\",9:\"PUNTOYCOMA\"},\nproductions_: [0,[3,2],[4,1],[6,2],[6,1],[7,1],[7,2]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\nManejo_Errores.resetErrors();return $$[$0-1];\nbreak;\ncase 2:\nthis.$=AST_Tools.BloquePrincipal($$[$0]);\nbreak;\ncase 3:\n $$[$0-1].push($$[$0]); this.$ = $$[$0-1]; \nbreak;\ncase 4:\n this.$ = [$$[$0]]; \nbreak;\ncase 5:\nthis.$=\"IDXD\"\nbreak;\ncase 6:\nconsole.log(\"Error\")\nbreak;\n}\n},\ntable: [{2:$V0,3:1,4:2,6:3,7:4,8:$V1},{1:[3]},{5:[1,7]},{2:$V0,5:[2,2],7:8,8:$V1},o($V2,[2,4]),o($V2,[2,5]),{9:[1,9]},{1:[2,1]},o($V2,[2,3]),o($V2,[2,6])],\ndefaultActions: {7:[2,1]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse (input) {\n    var self = this,\n        stack = [0],\n        tstack = [], // token stack\n        vstack = [null], // semantic value stack\n        lstack = [], // location stack\n        table = this.table,\n        yytext = '',\n        yylineno = 0,\n        yyleng = 0,\n        recovering = 0,\n        TERROR = 2,\n        EOF = 1;\n\n    var args = lstack.slice.call(arguments, 1);\n\n    //this.reductionCount = this.shiftCount = 0;\n\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    // copy state\n    for (var k in this.yy) {\n      if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n        sharedState.yy[k] = this.yy[k];\n      }\n    }\n\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n\n    var ranges = lexer.options && lexer.options.ranges;\n\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n\n    function popStack (n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n\n_token_stack:\n    var lex = function () {\n        var token;\n        token = lexer.lex() || EOF;\n        // if token isn't its numeric value, convert\n        if (typeof token !== 'number') {\n            token = self.symbols_[token] || token;\n        }\n        return token;\n    }\n\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        // retreive state number from top of stack\n        state = stack[stack.length - 1];\n\n        // use default actions if available\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            // read action for current state and first input\n            action = table[state] && table[state][symbol];\n        }\n\n_handle_error:\n        // handle parse error\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\n            var error_rule_depth;\n            var errStr = '';\n\n            // Return the rule stack depth where the nearest error rule can be found.\n            // Return FALSE when no error recovery rule was found.\n            function locateNearestErrorRecoveryRule(state) {\n                var stack_probe = stack.length - 1;\n                var depth = 0;\n\n                // try to recover from error\n                for(;;) {\n                    // check for error recovery rule in this state\n                    if ((TERROR.toString()) in table[state]) {\n                        return depth;\n                    }\n                    if (state === 0 || stack_probe < 2) {\n                        return false; // No suitable error recovery rule available.\n                    }\n                    stack_probe -= 2; // popStack(1): [symbol, action]\n                    state = stack[stack_probe];\n                    ++depth;\n                }\n            }\n\n            if (!recovering) {\n                // first see if there's any chance at hitting an error recovery rule:\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\n\n                // Report error\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push(\"'\"+this.terminals_[p]+\"'\");\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line '+(yylineno+1)+\":\\n\"+lexer.showPosition()+\"\\nExpecting \"+expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol)+ \"'\";\n                } else {\n                    errStr = 'Parse error on line '+(yylineno+1)+\": Unexpected \" +\n                                  (symbol == EOF ? \"end of input\" :\n                                              (\"'\"+(this.terminals_[symbol] || symbol)+\"'\"));\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected,\n                    recoverable: (error_rule_depth !== false)\n                });\n            } else if (preErrorSymbol !== EOF) {\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\n            }\n\n            // just recovered from another error\n            if (recovering == 3) {\n                if (symbol === EOF || preErrorSymbol === EOF) {\n                    throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\n                }\n\n                // discard current lookahead and grab another\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                symbol = lex();\n            }\n\n            // try to recover from error\n            if (error_rule_depth === false) {\n                throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\n            }\n            popStack(error_rule_depth);\n\n            preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\n            symbol = TERROR;         // insert generic error symbol as new lookahead\n            state = stack[stack.length-1];\n            action = table[state] && table[state][TERROR];\n            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\n        }\n\n        // this shouldn't happen, unless resolve defaults are off\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);\n        }\n\n        switch (action[0]) {\n            case 1: // shift\n                //this.shiftCount++;\n\n                stack.push(symbol);\n                vstack.push(lexer.yytext);\n                lstack.push(lexer.yylloc);\n                stack.push(action[1]); // push state\n                symbol = null;\n                if (!preErrorSymbol) { // normal execution/no error\n                    yyleng = lexer.yyleng;\n                    yytext = lexer.yytext;\n                    yylineno = lexer.yylineno;\n                    yyloc = lexer.yylloc;\n                    if (recovering > 0) {\n                        recovering--;\n                    }\n                } else {\n                    // error just occurred, resume old lookahead f/ before error\n                    symbol = preErrorSymbol;\n                    preErrorSymbol = null;\n                }\n                break;\n\n            case 2:\n                // reduce\n                //this.reductionCount++;\n\n                len = this.productions_[action[1]][1];\n\n                // perform semantic action\n                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1\n                // default location, uses first token for firsts, last for lasts\n                yyval._$ = {\n                    first_line: lstack[lstack.length-(len||1)].first_line,\n                    last_line: lstack[lstack.length-1].last_line,\n                    first_column: lstack[lstack.length-(len||1)].first_column,\n                    last_column: lstack[lstack.length-1].last_column\n                };\n                if (ranges) {\n                  yyval._$.range = [lstack[lstack.length-(len||1)].range[0], lstack[lstack.length-1].range[1]];\n                }\n                r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\n\n                if (typeof r !== 'undefined') {\n                    return r;\n                }\n\n                // pop off stack\n                if (len) {\n                    stack = stack.slice(0,-1*len*2);\n                    vstack = vstack.slice(0, -1*len);\n                    lstack = lstack.slice(0, -1*len);\n                }\n\n                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)\n                vstack.push(yyval.$);\n                lstack.push(yyval._$);\n                // goto new state = table[STATE][NONTERMINAL]\n                newState = table[stack[stack.length-2]][stack[stack.length-1]];\n                stack.push(newState);\n                break;\n\n            case 3:\n                // accept\n                return true;\n        }\n\n    }\n\n    return true;\n}};\n\n\tconst Tipo_Operacion\t= require('./Instrucciones.js').Tipo_Operacion;\n\tconst Tipo_Valor \t    = require('./Instrucciones.js').Tipo_Valor;\n    const AST_Tools     \t= require('./Instrucciones.js').AST_Tools;\n    const Manejo_Errores    = require('./Instrucciones.js').Manejo_Errores;\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"lex\":true,\"case-sensitive\":true,\"yylineno\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:/* Ignorar Espacios */\nbreak;\ncase 1:/* Comentario Simple */\nbreak;\ncase 2:/* Comentario Multiple */\nbreak;\ncase 3:return 'STRING';\nbreak;\ncase 4:return 'NUMBER';\nbreak;\ncase 5:return 'BOOLEAN';\nbreak;\ncase 6:return 'VOID';\nbreak;\ncase 7:return 'TYPE';\nbreak;\ncase 8:return 'LET';\nbreak;\ncase 9:return 'CONST';\nbreak;\ncase 10:return 'INCREMENTO';\nbreak;\ncase 11:return 'DECREMENTO';\nbreak;\ncase 12:return 'OPDIV';\nbreak;\ncase 13:return 'OPMULTI';\nbreak;\ncase 14:return 'OPMOD';\nbreak;\ncase 15:return 'OPMENOS';\nbreak;\ncase 16:return 'OPMAS';\nbreak;\ncase 17:return 'OPCIRCU';\nbreak;\ncase 18:return 'PARIZQ';\nbreak;\ncase 19:return 'PARDER';\nbreak;\ncase 20:return 'LLAVIZQ';\nbreak;\ncase 21:return 'LLAVDER';\nbreak;\ncase 22:return 'MAYORIG';\nbreak;\ncase 23:return 'MENORIG';\nbreak;\ncase 24:return 'MENOR';\nbreak;\ncase 25:return 'MAYOR';\nbreak;\ncase 26:return 'DIGUAL';\nbreak;\ncase 27:return 'IGUAL';\nbreak;\ncase 28:return 'NIGUAL';\nbreak;\ncase 29:return 'PUNTO';\nbreak;\ncase 30:return 9;\nbreak;\ncase 31:return 'COMA';\nbreak;\ncase 32:return 'DOSPUNTOS';\nbreak;\ncase 33:return 'TERNARIO';\nbreak;\ncase 34:return 'AND';\nbreak;\ncase 35:return 'OR';\nbreak;\ncase 36:return 'NOT';\nbreak;\ncase 37:return 'IF';\nbreak;\ncase 38:return 'ELSE';\nbreak;\ncase 39:return 'SWITCH';\nbreak;\ncase 40:return 'CASE';\nbreak;\ncase 41:return 'DEFAULT';\nbreak;\ncase 42:return 'WHILE';\nbreak;\ncase 43:return 'DO';\nbreak;\ncase 44:return 'FOR';\nbreak;\ncase 45:return 'OF';\nbreak;\ncase 46:return 'IN';\nbreak;\ncase 47:return 'BREAK';\nbreak;\ncase 48:return 'CONTINUE';\nbreak;\ncase 49:return 'RETURN';\nbreak;\ncase 50:return 'FUNCTION';\nbreak;\ncase 51:return 'CONSOLE';\nbreak;\ncase 52:return 'LOG';\nbreak;\ncase 53:return 'GRAFICAR';\nbreak;\ncase 54: yy_.yytext = yy_.yytext.substr(1,yy_.yyleng-2); return 'CADENA'; \nbreak;\ncase 55: yy_.yytext = yy_.yytext.substr(1,yy_.yyleng-2); return 'CADENA'; \nbreak;\ncase 56:return 'NUMERO'\nbreak;\ncase 57:return 8;\nbreak;\ncase 58:return 5;\nbreak;\ncase 59:Manejo_Errores.addErrorLexico(yy_.yytext,yy_.yylineno+1);return''\nbreak;\n}\n},\nrules: [/^(?:\\s+)/,/^(?:\\/\\/.*)/,/^(?:[\\/][*][^*]*[*]+([^\\/*][^*]*[*]+)*[\\/])/,/^(?:string\\b)/,/^(?:number\\b)/,/^(?:boolean\\b)/,/^(?:void\\b)/,/^(?:type\\b)/,/^(?:let\\b)/,/^(?:const\\b)/,/^(?:\\+\\+)/,/^(?:--)/,/^(?:\\/)/,/^(?:\\*)/,/^(?:%)/,/^(?:-)/,/^(?:\\+)/,/^(?:\\^)/,/^(?:\\()/,/^(?:\\))/,/^(?:\\{)/,/^(?:\\})/,/^(?:>=)/,/^(?:<=)/,/^(?:>)/,/^(?:<)/,/^(?:==)/,/^(?:=)/,/^(?:!=)/,/^(?:\\.)/,/^(?:;)/,/^(?:,)/,/^(?::)/,/^(?:\\?)/,/^(?:&&)/,/^(?:\\|\\|)/,/^(?:!)/,/^(?:if\\b)/,/^(?:else\\b)/,/^(?:switch\\b)/,/^(?:case\\b)/,/^(?:default\\b)/,/^(?:while\\b)/,/^(?:do\\b)/,/^(?:for\\b)/,/^(?:of\\b)/,/^(?:in\\b)/,/^(?:break\\b)/,/^(?:continue\\b)/,/^(?:return\\b)/,/^(?:function\\b)/,/^(?:console\\b)/,/^(?:log\\b)/,/^(?:graficar_ts\\b)/,/^(?:\"(\\\\\"|[^\\\"])*\")/,/^(?:'(\\\\\"|[^\\\"])*')/,/^(?:[0-9]+(\\.[0-9]+)?\\b)/,/^(?:([a-zA-Z])[a-zA-Z0-9_]*)/,/^(?:$)/,/^(?:.)/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = Gramatica;\nexports.Parser = Gramatica.Parser;\nexports.parse = function () { return Gramatica.parse.apply(Gramatica, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","//Variable Globales\n\nconst parser = require('../Compilador/Gramatica.js');\n\nexport let CodeTxt=\"\";\nlet Editor;\n\nexport function print(text,event){\n    alert(\"Codigo: \\n\"+CodeTxt);\n}\n\nexport function setCode(text){\n    CodeTxt=text\n}\n\nexport function setLC(editor,element){\n    element.innerHTML=\"L: \"+editor.getCursor().line+\" C: \"+editor.getCursor().ch\n}\n\nexport function setViewer(editor){\n   Editor=editor\n}\n\nexport function parse(){\n    let ast;\n    try {\n        // Se llama a parser\n        ast = parser.parse(CodeTxt.toString());\n        // Salida del AST en formato JSON\n        console.log(JSON.stringify(ast,null,2));\n        //return JSON.stringify(ast,null,2);\n    } \n    catch (e) {\n        console.error(e);\n        //return e;\n    }\n}\n\n\n","//Importaciones Default\nimport React, {useEffect} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n//Importaciones de CodeMirror\nimport {UnControlled as CodeMirror} from 'react-codemirror2';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/theme/darcula.css';\nimport 'codemirror/theme/lucario.css';\nimport 'codemirror/lib/codemirror.css';\n\n//Importaciones de Estilos en General\nimport  \"./styles/styles.css\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\n//Importaciones de funciones de JS\nimport {print} from './scripts/mainScript.js'\nimport {setCode} from './scripts/mainScript.js'\nimport {setLC} from './scripts/mainScript.js'\nimport {setViewer} from './scripts/mainScript.js'\nimport {CodeTxt} from './scripts/mainScript.js'\nimport {parse} from './scripts/mainScript.js'\n\n\n\n//Creacion de areas de codigo\n\nfunction Editor(){ \n\n  return (\n    <div className=\"col-md-6 divcontent \">\n      <h3>Entrada</h3>\n      <CodeMirror \n        autoFocus={true} \n        onChange={(editor, data, value) => {setCode(value)}} \n        onCursorActivity={(editor, data, value) => {setLC(editor,document.getElementById(\"LCEditor\"))}}\n        options={{\n          theme: 'darcula',\n          mode: 'javascript',\n          matchBrackets: true,\n          lineNumbers: true,}\n        }\n      />\n     <h6 id=\"LCEditor\">L:0 C:0</h6>\n   </div>\n)}\n\nfunction Viewer(){\n  \n return (\n    <div className=\"col-md-6 divcontent \" >\n      <h3>Salida</h3>\n      <CodeMirror \n        autoFocus={true}  \n        onCursorActivity={(editor, data, value) => {setLC(editor,document.getElementById(\"LCViewer\"))}}\n        options={{\n          theme: 'darcula',\n          mode: 'javascript',\n          matchBrackets: true,\n          lineNumbers: true,}\n        }\n    />\n    <h6 id=\"LCViewer\">L:0 C:0</h6>\n  </div>\n )} \n\n function Console(){ \n\n  return (\n     <div className=\"col-md-12 divcontent\">\n      <h3>Consola</h3>\n     <CodeMirror autoFocus={true} \n       options={{\n         theme: 'lucario',\n         lineNumbers: true,}\n       }\n     />\n   </div>\n)}\n\n\n//Creacion de Botones\nfunction BtnTranslate(props){\n  return(\n    <button className=\"btn btn-warning col-md-2 \" onClick={print} >Traducir </button>\n  )\n\n}\n\nfunction BtnRun(){\n\n  return(\n    <button className=\"btn btn-success col-md-2 offset-md-1 \" onClick={parse} >Ejecutar </button>\n  )\n\n}\n\nfunction BtnReports(){\n\n  return(\n    <button className=\"btn btn-danger col-md-2 offset-md-1\" onClick={print} >Reportes </button>\n  )\n\n}\n\n//Componente Principal\n\nfunction MainComponent(){\n\n  return (\n\n    <div className=\"container col-md-12\">\n      \n      <div className=\" row justify-content-center col-md-12 divcontent\">\n        <BtnTranslate ></BtnTranslate>\n        <BtnRun ></BtnRun>\n        <BtnReports ></BtnReports>\n      </div>\n      \n      <div className=\" row col-md-12 \">\n        <Editor></Editor>\n        <Viewer></Viewer>\n      </div>\n\n      <div className=\" row col-md-12 \">\n        <Console></Console>\n      </div>\n\n    </div>\n    \n  );\n}\n\n\n\n\nReactDOM.render(\n  <MainComponent/>,document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}